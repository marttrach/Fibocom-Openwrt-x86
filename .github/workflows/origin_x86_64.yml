name: 'OpenWrt ImageBuilder'
description: 'Build OpenWrt custom images using ImageBuilder'
branding: 
  icon: 'box'
  color: 'yellow'
inputs:
  image: 
    description: 'Specifies the imagebuilder tag'
    required: true
    default: 'x86-64'
  brlan_ipv4:
    description: 'br-lan IPv4 (留空採預設 192.168.2.1)'
    required: false
  modem_manager_apn:
    description: 'APN'
    default: 'internet'
    required: false
  modem_manager_pin:
    description: 'SIM PIN'
    required: false
  profile:
    description: 'Specifies the target image to build - PROFILE'
    required: false
    default: ''
  openwrt-version:
    description: 'OpenWrt version'
    required: true
    default: 'master'
  packages:
    description: 'A list of packages to embed into the image - PACKAGES'
    required: false
    default: 'luci-i18n-dockerman-zh-tw modemmanager luci-proto-modemmanager curl luci-i18n-firewall-zh-tw luci-i18n-package-manager-zh-tw luci-i18n-ttyd-zh-tw script-utils base-files ca-bundle dnsmasq dropbear e2fsprogs firewall4 fstools grub2-bios-setup kmod-button-hotplug kmod-nft-offload libc libgcc libustream-mbedtls logd mkf2fs mtd netifd nftables odhcp6c odhcpd-ipv6only opkg partx-utils procd-ujail uci uclient-fetch urandom-seed urngd kmod-amazon-ena kmod-amd-xgbe kmod-bnx2 kmod-dwmac-intel kmod-e1000e kmod-e1000 kmod-forcedeth kmod-fs-vfat kmod-igb kmod-igc kmod-ixgbe kmod-r8169 kmod-tg3 luci kmod-mtk-t7xx kmod-phy-aquantia kmod-sfp kmod-wwan kmod-usb-net-rndis kmod-usb-serial kmod-usb-serial-option kmod-usb3 luci-proto-mbim luci-proto-ncm comgt pciutils usbutils block-mount ethtool-full iperf3 luci-i18n-base-zh-tw kmod-usb-net-cdc-mbim umbim picocom kmod-scsi-core kmod-block2mtd fdisk lsblk speedtest-go kmod-tcp-bbr luci-i18n-uhttpd-zh-tw luci-i18n-sqm-zh-tw luci-i18n-cloudflared-zh-tw luci-i18n-acme-zh-tw luci-app-uhttpd luci-app-sqm luci-app-acme kmod-usb-serial-wwan'
  files:
    description: 'Directory with custom files to include - FILES'
    required: false
    default: 'files'
  disabled-services:
    description: 'The names of services from /etc/init.d to disable, e.g. dhcp for dnsmasq - DISABLED_SERVICES'
    required: false
    default: ''
  bin-dir:
    description: 'Alternative output directory for the images - BIN_DIR'
    required: false
    default: 'bin'
  rootfs-size:
    description: 'Override the default rootfs partition size in MegaBytes - ROOTFS_PARTSIZE'
    required: false
    default: '1024'
  debug:
    description: 'Set to "1" to enable additional debug info like the content of .config'
    required: false
    default: ''
runs:
  using: 'composite'
  steps:
    - run: |
        mkdir -p bin && chmod 777 bin && \
        mkdir -p packages && chmod 777 packages && \
        docker run --rm \
          -v ${{ github.action_path }}/make_image.sh:/builder/github_make_image.sh \
          -v "$(pwd)"/config.sed:/builder/config.sed \
          -v "$(pwd)"/${{ inputs.files }}/:/builder/files \
          -v "$(pwd)"/${{ inputs.bin-dir }}/:/builder/bin:rw \
          -v "$(pwd)"/packages/:/builder/packages \
          -e PROFILE="${{ inputs.profile }}" \
          -e PACKAGES="${{ inputs.packages }}" \
          -e DISABLED_SERVICES="${{ inputs.disabled-services }}" \
          -e ROOTFS_PARTSIZE="${{ inputs.rootfs-size }}" \
          -e FILES="files" \
          -e DEBUG="${{ inputs.debug }}" \
          -e OPENWRT_VERSION="${{ inputs.openwrt-version }}" \
          -e OPENWRT_IMAGE="${{ inputs.image }}" \
          -e SET_BRLAN_IPV4=${{ inputs.set_brlan_ipv4 }} \
          -e BRLAN_IPV4=${{ inputs.brlan_ipv4 }} \
          -e MODEM_MANAGER_APN="${{ inputs.modem_manager_apn }}" \
          -e MODEM_MANAGER_PIN="${{ inputs.modem_manager_pin }}" \
          openwrt/imagebuilder:${{ inputs.image }}-${{ inputs.openwrt-version }} \
            /builder/github_make_image.sh
      shell: bash
